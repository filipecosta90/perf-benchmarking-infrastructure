# from http://dmitrypol.github.io/redis/2019/02/25/1000-node-redis-cluster.html
---
- name: Install Redis OSS version cluster
  hosts: all
  connection: ssh
  become: yes
  become_user: root
  become_method: sudo
  vars:
    redis_src_dir: ~/redis
    redis_server: "{{ redis_src_dir }}/src/redis-server"
    redis_cluster_dir: ~/redis_cluster
    redis_path_var: /usr/local/bin
    redis_port_start: 6379
  tasks:

  - name: clone redis git repo
    become: yes
    git:
      repo: https://github.com/antirez/redis.git
      dest: "{{ redis_src_dir }}"
      version: "{{ redis_version | default(5.0.7) }}"
    

  - name: compile redis
    become: yes
    command: make noopt
    args:
      chdir: "{{ redis_src_dir }}/src"

  - name: install redis
    become: yes
    command: sudo make noopt install 
    args:
      chdir: "{{ redis_src_dir }}/src"

  - name: Add redis bin dir to system-wide $PATH.
    become: yes
    copy:
      dest: /etc/profile.d/custom-path.sh
      content: 'PATH=$PATH:{{ redis_path_var }}'
  
  - name: Reload Path
    become: yes
    shell: source /root/.bashrc
    args:
      executable: /bin/bash

  - name: create cluster dirs
    become: yes
    file:
      path: "{{ redis_cluster_dir }}/{{ item }}"
      state: directory
    with_sequence: start={{ redis_port_start }} count={{ redis_cluster_shard_count | default(1) }}
  - name: copy redis-server to cluster dirs
    become: yes
    copy:
      remote_src: true
      src: "{{ redis_server }}"
      dest: "{{ redis_cluster_dir }}/{{ item }}/"
      mode: u+x
    with_sequence: start={{ redis_port_start }} count={{ redis_cluster_shard_count | default(1) }}
  - name: copy redis.conf to cluster dirs
    become: yes
    template:
      src: "{{ redis_config }}"
      dest: "{{ redis_cluster_dir }}/{{ item }}/redis.conf"
    with_sequence: start={{ redis_port_start }} count={{ redis_cluster_shard_count | default(1) }}

  - name: start redis-server
    become: yes
    command: /usr/local/bin/redis-server {{ redis_cluster_dir }}/{{ item }}/redis.conf
    args:
      chdir: "{{ redis_cluster_dir }}/{{ item }}"
    with_sequence: start={{ redis_port_start }} count={{ redis_cluster_shard_count | default(1) }}